{"version":3,"file":"index.mjs","sources":["../lib/index.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the current user's home directory.\n*\n* @module @stdlib/os-homedir\n*\n* @example\n* import homedir from '@stdlib/os-homedir';\n* var home = homedir();\n* // e.g., returns '/Users/<username>'\n*/\n\n// MODULES //\n\nvar os = require( 'os' );\nimport isFunction from '@stdlib/assert-is-function';\nimport main from './main.js';\n\n\n// VARIABLES //\n\nvar home = ( isFunction( os.homedir ) ) ? os.homedir : main;\n\n\n// EXPORTS //\n\nexport default home;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport ENV from '@stdlib/process-env';\nimport IS_WINDOWS from '@stdlib/assert-is-windows';\nimport PLATFORM from '@stdlib/os-platform';\nimport getuid from '@stdlib/process-getuid';\n\n\n// MAIN //\n\n/**\n* Returns the current user's home directory.\n*\n* @returns {(string|null)} home directory\n*\n* @example\n* var home = homedir();\n* // e.g., returns '/Users/<username>'\n*/\nfunction homedir() {\n\tvar home;\n\tvar user;\n\n\tif ( IS_WINDOWS ) {\n\t\t// https://github.com/libuv/libuv/blob/764877fd9e4ea67c0cbe27bf81b2b294ed33b0f5/src/win/util.c#L1170\n\t\t// https://en.wikipedia.org/wiki/Environment_variable#Windows\n\t\thome = ENV[ 'USERPROFILE' ] || ENV[ 'HOMEDRIVE' ]+ENV[ 'HOMEPATH' ] || ENV[ 'HOME' ];\n\t\treturn ( home ) ? home : null; // eslint-disable-line no-unneeded-ternary\n\t}\n\t// https://github.com/libuv/libuv/blob/9fbcca048181b927cfcdb5c6c49e5bdff173aad5/src/unix/core.c#L1030\n\thome = ENV[ 'HOME' ];\n\tif ( home ) {\n\t\treturn home;\n\t}\n\t// Get the current user account (https://docs.python.org/2/library/getpass.html):\n\tuser = ENV[ 'LOGNAME' ] || ENV[ 'USER' ] || ENV[ 'LNAME' ] || ENV[ 'USERNAME' ];\n\n\t// If on Mac OS X, use the Mac path convention (http://apple.stackexchange.com/questions/119230/what-is-standard-for-os-x-filesystem-e-g-opt-vs-usr)...\n\tif ( PLATFORM === 'darwin' ) {\n\t\treturn ( user ) ? '/Users/'+user : null;\n\t}\n\t// Check if running as 'root' (https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard)...\n\tif ( getuid() === 0 ) {\n\t\treturn '/root';\n\t}\n\t// If on Linux, use the Linux path convention (https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard)...\n\treturn ( user ) ? '/home/'+user : null;\n}\n\n\n// EXPORTS //\n\nexport default homedir;\n"],"names":["os","home","isFunction","homedir","user","IS_WINDOWS","ENV","PLATFORM","getuid"],"mappings":";;21DAiCA,IAAIA,yOAOAC,EAASC,EAAYF,EAAGG,SAAcH,EAAGG,QCD7C,WACC,IAAIF,EACAG,EAEJ,OAAKC,GAGJJ,EAAOK,EAAoB,aAAIA,YAAmBA,EAAe,UAAMA,EAAW,OACzD,MAG1BL,EAAOK,QAECL,GAGRG,EAAOE,EAAgB,SAAIA,QAAiBA,EAAY,OAAMA,EAAe,SAG3D,WAAbC,EACG,EAAW,UAAUH,EAAO,KAGlB,IAAbI,IACG,QAGD,EAAW,SAASJ,EAAO,KACnC"}